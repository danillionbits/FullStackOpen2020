{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/Person.js","components/Persons.js","components/Notification.js","services/persons.js","App.js","index.js"],"names":["Filter","persons","filter","handleNewFilter","value","onChange","PersonForm","props","onSubmit","handleAdd","newName","handleNewName","newNumber","handleNewNumber","type","Person","person","removePerson","name","number","onClick","id","Persons","newFilter","p","toLowerCase","includes","concat","map","key","Notification","message","error","className","baseUrl","axios","get","then","response","data","newPerson","post","put","delete","App","useState","setPersons","setNewName","setNewNumber","setNewFilter","noti","setNoti","useEffect","personService","initialPersons","handleNoti","notification","setTimeout","event","target","preventDefault","duplicateName","find","window","confirm","returnedPerson","updatedPersons","catch","updatePerson","createPerson","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9ed2ab81.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Filter = ({ persons, filter, handleNewFilter }) => {\r\n  return (\r\n    <div>\r\n      filter shown with: \r\n      <input value={filter} onChange={handleNewFilter} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Filter","import React from 'react'\r\n\r\nconst PersonForm = ( props ) => {\r\n  return (\r\n    <div>\r\n      <form onSubmit={props.handleAdd}>\r\n        <div>\r\n          name: <input value={props.newName} onChange={props.handleNewName} />\r\n        </div>\r\n        <div>\r\n          number: <input value={props.newNumber} onChange={props.handleNewNumber} />\r\n        </div>\r\n        <div>\r\n          <button type=\"submit\">add</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PersonForm","import React from 'react'\r\n\r\nconst Person = ({ person, removePerson }) => {\r\n  return (\r\n    <div>\r\n      {person.name} {person.number}\r\n      <button onClick={() => removePerson(person.id)}>delete</button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Person","import React from 'react'\r\nimport Person from './Person'\r\n\r\nconst Persons = ({ persons, newFilter, removePerson }) => {\r\n  const personsShow = newFilter\r\n\t\t? persons.filter(p => p.name.toLowerCase().includes(newFilter.toLowerCase()))\r\n    : persons.concat()\r\n      \r\n  return (\r\n    personsShow\r\n      .map(p => <Person key={p.id} person={p} removePerson={removePerson}/>)\r\n  )\r\n}\r\n\r\nexport default Persons","import React from 'react'\r\n\r\nconst Notification = ({ message, error }) => {\r\n  if (message) {\r\n    return (\r\n      <div className={ error ? 'success':'error' }>\r\n        {message}\r\n      </div>\r\n    )\r\n  }\r\n  return null\r\n}\r\n\r\n  export default Notification","import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = newPerson => {\r\n  const request = axios.post(baseUrl, newPerson)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newPerson) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newPerson)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst remove = (id) => {\r\n  const request = axios.delete(`${baseUrl}/${id}`)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nexport default { \r\n  getAll, \r\n  create, \r\n  update,\r\n  remove \r\n}","import React, { useState, useEffect } from 'react'\nimport Filter from './components/Filter'\nimport PersonForm from './components/PersonForm'\nimport Persons from './components/Persons'\nimport Notification from './components/Notification'\nimport personService from './services/persons'\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([]) \n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ newFilter, setNewFilter ] = useState('')\n  const [ noti, setNoti ] = useState({ message:'', error: false })\n\n  useEffect(() => {\n    personService\n      .getAll()\n      .then(initialPersons => {\n        setPersons(initialPersons)\n      })\n  }, [])\n\n  const createPerson = (person) => {\n    personService\n      .create(person)\n      .then(returnedPerson => {\n        const notification = {\n          message: `Added ${newName}`,\n          error: true\n        }\n        setPersons(persons.concat(returnedPerson))\n        handleNoti(notification)\n      })\n      .catch(error => {\n        const notification = {\n          message: error.response.data,\n          error: false\n        }\n        handleNoti(notification)\n      })\n  }\n\n  const updatePerson = (id, person) => {\n    personService\n      .update(id, person)\n      .then( returnedPerson => {\n        const updatedPersons = persons.map(p => p.id !== id ? p : returnedPerson);\n        const notification = {\n          message: `Added ${newName}`,\n          error: true\n        }\n        setPersons(updatedPersons);\n        handleNoti(notification)\n      })\n      .catch(error => {\n        const notification = {\n          message: `Information of ${newName} has already been removed from the server`,\n          error: false\n        }\n        handleNoti(notification);\n      })\n  }\n\n  const removePerson = id => {\n    const person = persons.find(p => p.id === id)\n    if (window.confirm(`Delete ${person.name}?`)) {\n      personService\n        .remove(id)\n        .then(\n          setPersons(persons.filter(p => p.id !== person.id))\n        )\n    }\n  }\n\n  const handleAdd = (event) => {\n    event.preventDefault()\n\n    const duplicateName = persons.find(p => p.name === newName)\n    const person = { name: newName, number: newNumber }\n\n    if (duplicateName) {\n      if (window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`))\n        updatePerson(duplicateName.id, person)\n    } else {\n      createPerson(person)\n    }\n    setNewName('')\n    setNewNumber('')\n  }\n\n  const handleNewName = (event) => setNewName(event.target.value)\n  const handleNewNumber = (event) => setNewNumber(event.target.value)\n  const handleNewFilter = (event) => setNewFilter(event.target.value)\n  const handleNoti = notification => {\n    setNoti(notification)\n    setTimeout(() => {\n      setNoti(null)\n    }, 3000)\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification {...noti} />\n\n      <Filter \n        persons={persons} \n        newFilter={newFilter}\n        handleNewFilter={handleNewFilter}\n      />\n\n      <h2>Add a new</h2>\n      <PersonForm \n        handleAdd={handleAdd}\n        newName={newName}\n        handleNewName={handleNewName}\n        newNumber={newNumber}\n        handleNewNumber={handleNewNumber}\n      />\n\n      <h2>Numbers</h2>\n      <Persons \n        persons={persons} \n        newFilter={newFilter} \n        removePerson={removePerson}\n      />\n    </div>\n  )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}